@page "/orders"
@inject IOrderService OrderService

@if(orders == null)
{
    <div>
        <div class="text-center pt-3" style="color: purple; font-size: 16pt">
            Loading your orders...
        </div>
        <div class="text-center mt-3">
            <span class="spinner-border spinner-border-sm" role="status" aria-hidden="true"
              style="font-size: 16pt; width: 36px; height: 36px; color: purple" />
        </div>
        <div class="text-center">
            <img src="/images/blazor-logo.png" style=" width: 5%;" />
        </div>
    </div>
} else if(orders.Count() == 0)
{
    <span>You have no orders, yet</span>
} else
{
    foreach(var order in orders)
    {
        <div class="container">
            <div class="image-wrapper">
                <img src="@order.ProductImageUrl" class="image" />
            </div>
            <div class="detail">
                <h4>@order.Product</h4>
                <span>@order.OrderDate</span>
                <a href="orders/@order.Id">Show more..</a>
            </div>
            <div class="order-price">
                $@order.TotalPrice
            </div>
        </div>
    }
}

@code {
    List<OrderOverviewResponse> orders = null;

    protected override async Task OnInitializedAsync()
    {
        orders = await OrderService.GetOrder();
    }
}
