@page "/profile"
@inject IAuthService AuthService
@attribute [Authorize]

<AuthorizeView>
    @*<h3>Hi! You`re logged in with <i>@context.User.Identity.Name</i></h3>*@
    <RadzenCard class="m-3">
        <h3 class="h5"><b>Profile</b></h3>
        <div class="d-flex flex-row">
            <RadzenImage Path="https://cdn1.vectorstock.com/i/1000x1000/42/60/round-red-background-vector-9254260.jpg" Class="rounded-circle float-left mr-3" Style="width: 100px; height: 100px;" />
            <div>
                <div>Email</div>
                <b>@context.User.Identity.Name</b>
                <div class="mt-3">Phone Number</div>
                <b></b>
            </div>
        </div>
    </RadzenCard>
</AuthorizeView>

<h5><b>Delivery Address</b></h5>
<AddressForm />
<p></p>

<h5><b>Change Password</b></h5>

<EditForm Model="request" OnValidSubmit="ChangePassword">
    <DataAnnotationsValidator />
    <div class="mb-3">
        <label for="password">New Password</label>
        <InputText id="password" @bind-Value=request.Password class="form-control" type="password" />
        <ValidationMessage For="@(() => request.Password)" />
    </div>
    <div class="mb-3">
        <label for="confirmPassword">Confirm New Password</label>
        <InputText id="confirmPassword" @bind-Value=request.ConfirmPassword class="form-control" type="password" />
        <ValidationMessage For="@(() => request.ConfirmPassword)" />
    </div>
    <button type="submit" class="btn btn-primary">Apply</button>
</EditForm>
@message

@code {
    UserChangePassword request = new UserChangePassword();

    string message = string.Empty;

    private async Task ChangePassword()
    {
        var result = await AuthService.ChangePassword(request);
        message = result.Message;
    }
}
