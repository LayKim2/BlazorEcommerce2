@*@inject HttpClient Http*@
@inject IProductService ProductService

@if(ProductService.Products == null || ProductService.Products.Count == 0)
{
    <span>Loading Products...</span>
}
else
{
    <ul class="list-unstyled">
        @foreach (var product in ProductService.Products)
        {
            <li class="media my-3">
                <div class="media-img-wrapper mr-2">
                    <a href="/product/@product.Id">
                        <img class="media-img" src="@product.ImageUrl" alt="@product.Ttile" />
                    </a>
                </div>
                <div class="media-body">
                    <a href="/product/@product.Id">
                        <h4 class="mb-0">@product.Ttile</h4>
                    </a>
                    <p>@product.Description</p>
                    <h5 class="price">
                        $@product.Price
                    </h5>
                </div>
            </li>
        }
    </ul>
}


@code {
    // http
    //private static List<Product> Products = new List<Product>();

    // when this component is rendered at first
    protected override async Task OnInitializedAsync()
    {
        //// http
        //var result = await Http.GetFromJsonAsync<ServiceResponse<List<Product>>>("api/Product");
        //if (result != null && result.Data != null)
        //    Products = result.Data;

        await ProductService.GetProducts();
    }   
}
